# i3 config file (v4)
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:CaskaydiaCove Nerd Font Mono Regular 11
# font pango:monospace 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex-autostart --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use playerctl for media keys in PulseAudio.
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrevious exec playerctl previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# * start kitty as the default terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# * ==================== program launching menu
# start dmenu (the default program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run

# A more modern dmenu replacement is rofi:
bindsym $mod+d exec --no-startup-id rofi -show run

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:    "
set $ws2 "2: 󰒋 "
set $ws3 "3:   "
set $ws4 "4: 󰨞  "
set $ws5 "5:   "
set $ws6 "6: "
set $ws7 "7: "
set $ws8 "8: "
set $ws9 "9: "
set $ws10 "10:  "

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2; layout tabbed
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4; layout tabbed
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# * ==================== Assign workspaces to external monitor and display
# assign a name to each monitor and screen
set $monitor1 HDMI-A-0
set $monitor2 eDP

# can specify multiple outputs to a workspace. The first available will be used.
workspace $ws1 output $monitor1
workspace $ws2 output $monitor1
workspace $ws3 output $monitor1
workspace $ws4 output $monitor1
workspace $ws5 output $monitor1
workspace $ws6 output $monitor1
workspace $ws7 output $monitor1
workspace $ws8 output $monitor1
workspace $ws9 output $monitor1
workspace $ws10 output $monitor1

# * ==================== open certain windows on certain workspaces
# using package xprop to find window names and classes
# class of any app = WM_CLASS(STRING)

# workspace 1 - email and chat clients
assign [class="thunderbird"] $ws1
assign [class="Skype"] $ws1
assign [class="Whatsapp-for-linux"] $ws1
# workspace 2 - server
assign [class="x2goclient"] $ws2
assign [class="Com.cisco.secureclient.gui"] $ws2
# workspace 3 - internet browsers
assign [class="Google-chrome"] $ws3
assign [class="firefox"] $ws3
# workspace 4 - coding
assign [class="Code"] $ws4
# workspace 5 - files
assign [class="Nemo"] $ws5
# workspace 6 -
# workspace 7
# workspace 8
# workspace 9
# workspace 10
assign [class="Spotify"] $ws10

# * ==================== Always open following programs on startup
exec thunderbird
exec Skype
exec x2goclient
exec Com.cisco.secureclient.gui
exec google-chrome
exec code
exec Spotify

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym semicolon resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# * ==================== Colorschemes
# transparency colors
set $transpareny_100    #FF
set $transpareny_90     #E6
set $transpareny_80     #CC
set $transpareny_70     #B3
set $transpareny_60     #99
set $transpareny_50     #80
set $transpareny_40     #66
set $transpareny_30     #4D
set $transpareny_20     #33
set $transpareny_10     #1A
set $transpareny_0      #00

# using catppuccin frappe
set $rosewater #f2d5cf
set $flamingo  #eebebe
set $pink      #f4b8e4
set $mauve     #ca9ee6
set $red       #e78284
set $maroon    #ea999c
set $peach     #ef9f76
set $green     #a6d189
set $teal      #81c8be
set $sky       #99d1db
set $sapphire  #85c1dc
set $blue      #8caaee
set $lavender  #babbf1
set $text      #c6d0f5
set $subtext1  #b5bfe2
set $subtext0  #a5adce
set $overlay2  #949cbb
set $overlay1  #838ba7
set $overlay0  #737994
set $surface2  #626880
set $surface1  #51576d
set $surface0  #414559
set $base      #303446
set $mantle    #292c3c
set $crust     #232634

# Concatenate the two color values to create transparent colors
set $combined_rosewater $rosewater$transpareny_10

# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# * ==================== i3 Status Bar
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status -c ~/.config/i3/i3status.conf
    tray_output primary
    # status bar position
    position top
	workspace_buttons yes
	# height 27
    # font
    font pango:CaskaydiaCove Nerd Font Regular 15
    # i3bar transparency
    # i3bar_command i3bar --transparency
    # i3 status bar colors
    colors {
        separator $overlay0
        background $base
        statusline $text
        focused_workspace $lavender $base $text
        active_workspace $overlay0 $base $text
        inactive_workspace $overlay0 $base $text
        urgent_workspace $peach $base $peach
    }
}

# * ==================== My Keybindings
# logging out
bindsym $mod+Shift+x exec i3lock
# move workspace to primary display
bindsym $mod+Shift+m exec --no-startup-id send_to_primary

# * ==================== Background Wallpaper
# using package feh to setup background

# using fedora default dir
# exec_always feh --bg-scale /usr/share/backgrounds/fedora-workstation/petals_light.webp
# my wallpapers directory
exec_always feh --bg-scale ~/wallpapers/abstract_blue_background-wallpaper-1920x1080.jpg

# * ==================== Transition Effects
# using picom for faze and transparency effects between workspaces and terminals
exec_always picom -f

# * ==================== Setup screens and monitor displays
# using package arandr to setup displays

# layout 1 - with monitor and display
# exec_always xrandr \
#     --output eDP --mode 1920x1080 --pos 2560x0 --rotate normal \
#     --output HDMI-A-0 --primary --mode 2560x1440 --pos 0x0 --rotate normal \
#     --output DisplayPort-0 --off \
#     --output DisplayPort-1 --off

# layout 2 - with monitor only
exec_always xrandr --output eDP --off \
    --output HDMI-A-0 --primary --mode 2560x1440 --pos 0x0 --rotate normal \
    --output DisplayPort-0 --off \
    --output DisplayPort-1 --off
